/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type { RBAC, RBACInterface, RBACMulticall } from "../../contracts/RBAC";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRolesLedger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isProcess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roles",
    outputs: [
      {
        internalType: "contract RolesLedger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_roles",
        type: "address",
      },
    ],
    name: "setRolesLedger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
export class RBAC__factory {
  static readonly abi = _abi;
  static createInterface(): RBACInterface {
    return new utils.Interface(_abi) as RBACInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RBAC {
    return new Contract(address, _abi, signerOrProvider) as RBAC;
  }
  static multicall(address: string): RBACMulticall {
    return new MulticallContract(address, _abi) as unknown as RBACMulticall;
  }
}
